@charset "UTF-8";
/***
    The new CSS reset - version 1.8.2 (last updated 23.12.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(:not(html, iframe, canvas, img, svg, video, audio, input[type=checkbox], input[type=radio]):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
pre {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: "";
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

@font-face {
  font-family: "Futura";
  font-weight: 300;
  font-stretch: condensed;
  src: url("./assets/fonts/FuturaStd-CondensedLight.otf") format("opentype");
}
@font-face {
  font-family: "Futura";
  font-weight: 300;
  src: url("./assets/fonts/FuturaStd-Light.otf") format("opentype");
}
@font-face {
  font-family: "Futura";
  font-weight: 400;
  src: url("./assets/fonts/FuturaStd-Book.otf") format("opentype");
}
@font-face {
  font-family: "Futura";
  font-weight: 500;
  src: url("./assets/fonts/FuturaStd-Medium.otf") format("opentype");
}
@font-face {
  font-family: "Futura";
  font-weight: 700;
  src: url("./assets/fonts/FuturaStd-Bold.otf") format("opentype");
}
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Universal
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Apply styling to all elements (including their `::before` and `::after`
pseudo-elements). One common use of this selector is to apply a custom
`box-sizing`. */
*, *::before, *::after {
  box-sizing: border-box;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Root
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
:root {
  --border: 1px solid currentColor;
  --padding: 1rem;
  --border-thick: 0;
  --measure: 90ch;
  --blue-100: #000e1f;
  --blue-200: #122941;
  --blue-300: #304a63;
  --blue-400: #506d85;
  --blue-500: #658599;
  --blue-600: #87afc9;
  --blue-700: #abcbdb;
  --blue-800: #cfe5ed;
  --blue-900: #f2fcff;
  --yellow-100: #331b00;
  --yellow-200: #935b06;
  --yellow-300: #cd931e;
  --yellow-400: #e7bd49;
  --yellow-500: #f0da82;
  --yellow-600: #f3ebb8;
  --yellow-700: #f8f3dd;
  --yellow-800: #fcf9f2;
  --yellow-900: #fffdfa;
  --green-100: #003331;
  --green-200: #074745;
  --green-300: #115b59;
  --green-400: #1f6f6c;
  --green-500: #318380;
  --green-600: #479694;
  --green-700: #61aaa9;
  --green-800: #7ebebd;
  --green-900: #9fd2d1;
}

html {
  scroll-behavior: smooth;
}

body {
  background-color: var(--blue-500);
  color: var(--blue-800);
  font-family: "Futura";
  line-height: 1.4;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Content sectioning
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
h1, h2, h3, h4, h5, h6 {
  font-family: Futura;
}

h1 {
  font-size: clamp(4em, 10vw, 6em);
  font-weight: 500;
  line-height: 1;
  text-align: center;
  text-transform: uppercase;
}

h2 {
  font-size: 4em;
  letter-spacing: -0.02em;
  margin-block-end: 1em;
}

h3 {
  font-size: 1em;
  letter-spacing: 0.1em;
  text-transform: uppercase;
}

h4 {
  font-size: 1.25em;
}

h5 {
  font-size: 1.125em;
}

h6 {
  font-size: 1em;
}

header {
  background-image: linear-gradient(to bottom, var(--blue-400), transparent);
  color: var(--blue-800);
  padding: var(--padding);
  position: sticky;
  inset-block-start: 0;
  z-index: 1;
  font-size: 1.25em;
}

header a[href="#home"] {
  font-size: 1.5em;
  font-weight: 500;
}

nav ul, nav ol {
  --space: 1rem;
}

nav li {
  --size: 0.5em;
  font-size: var(--size, 1em);
  font-weight: 500;
  letter-spacing: 0.04em;
  text-transform: uppercase;
}

nav a {
  padding-block: 1.25rem;
  position: relative;
}

nav a::after {
  content: "";
  background-color: var(--yellow-600);
  height: 3px;
  position: absolute;
  inset-block-end: 0;
  inset-inline-start: 0;
  width: 100%;
  transform: scaleX(0);
  transition: transform 125ms ease;
}

nav a:not(.highlight a):hover::after {
  transform: scaleX(1);
  transition: transform 250ms ease;
}

section {
  padding-block: 5rem;
  scroll-margin-block-start: 5rem;
}

footer {
  background-color: var(--blue-300);
  color: var(--blue-500);
  font-size: 0.875em;
}
footer div {
  padding: var(--padding);
}
footer p {
  background-color: var(--blue-200);
  padding: var(--padding);
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Text block content
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Overall styling, e.g. vertical spacing */
p, ol, ul, pre, blockquote, figure, hr, dl {
  max-width: var(--measure);
}

figure {
  box-shadow: 0 2px 4px hsla(207deg, 70%, 10%, 0.2), 0 4px 8px hsla(207deg, 70%, 10%, 0.14), 0 8px 16px hsla(207deg, 70%, 10%, 0.12);
  background-color: var(--blue-600);
  border-radius: 2px;
}

figure picture {
  border-top: 1px solid hsla(0deg, 0%, 100%, 0.12);
  clip-path: polygon(0% 0%, 100% 0%, 100% 85%, 0% 100%);
}

figcaption {
  color: var(--blue-300);
}
figcaption p:first-child {
  font-size: 1.25rem;
  margin-block-end: 0.25rem;
}
figcaption address {
  margin-block-start: 1rem;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Inline text semantics
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
a {
  cursor: pointer;
}

/* If you specify a font size, consider using the `em` unit so that it works
universally, e.g. for both `h1 small` and `p small` */
time span {
  font-size: 0.75em;
  padding-inline-start: 0.125em;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Demarcating edits
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Embedded content
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
img {
  display: block;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Table content
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Forms
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
legend {
  margin-block-end: 0.375rem;
}

form {
  margin-block: 3rem;
}

/* Overall styling, e.g. vertical spacing */
input, textarea, select, button {
  padding: 0.5rem;
}

input:-webkit-autofill,
input:-webkit-autofill:focus {
  transition: background-color 600000s 0s, color 600000s 0s;
}

/* `textarea` and `input` elements that share a similar look and similar styling
capabilities */
/* - common styling */
textarea,
input,
input[type=text],
input[type=password],
input[type=email],
input[type=tel],
input[type=number],
input[type=search],
input[type=url],
input[type=date],
input[type=datetime-local],
input[type=month],
input[type=week],
input[type=time] {
  border: 1px solid currentColor;
  inline-size: 100%;
  margin-block-start: 0.375rem;
  padding: 0.5rem 0.5rem 0.375rem;
}

/* - individual styling */
/* Tick boxes */
label:has(input[type=checkbox]), label:has(input[type=radio]) {
  accent-color: var(--yellow-600);
  cursor: pointer;
  margin-block-start: 0;
  border: 1px solid currentColor;
  padding: 0.5rem;
}

label:has(input[type=checkbox]:checked), label:has(input[type=radio]:checked) {
  background-color: var(--yellow-600);
  border: 1px solid var(--yellow-600);
  color: var(--blue-500);
}

label:has(input[type=checkbox]:checked):hover, label:has(input[type=radio]:checked):hover {
  background-color: var(--yellow-500);
  border: 1px solid var(--yellow-500);
  color: var(--blue-500);
}

input[type=checkbox] {
  display: none;
  order: -1;
  margin-inline-start: 0;
  margin-inline-end: 0.375rem;
  top: 2px;
  position: relative;
}

input[type=radio] {
  display: none;
}

/* Other input fields, some with limited styling capabilities */
button[type=submit],
input[type=submit] {
  background-color: var(--color);
  border: 3px solid var(--background-color);
  color: var(--background-color);
  cursor: pointer;
  font-weight: 500;
  padding: 0.5em 1em;
  font-size: 1.125em;
  text-transform: uppercase;
  letter-spacing: 0.04em;
  outline: 3px solid var(--color);
  transition: all 125ms ease;
}

button[type=submit]:hover,
input[type=submit]:hover {
  background-color: var(--yellow-500);
  outline-color: var(--yellow-500);
  transition: all 250ms ease;
}

button[type=submit]:disabled,
input[type=submit]:disabled {
  cursor: wait;
  background-color: var(--yellow-700);
}

/* This matches forms or form elements that are invalid *and* have been
interacted with. Note that:
1) You may need to add the `interacted` class to forms yourself
2) You may need to add the `touched` class to form fields yourself
3) `:user-invalid` is a working draft and not yet supported by most browsers
4) `:-moz-ui-invalid` is non-standard and only works in Firefox
Form validation error messages will appear (in capable browsers) regardless of
this styling. You can omit 1) and 2) and still have working forms. Perfect
example of progressive enhancement. */
/* Applies to invalid forms */
/* Applies to invalid form fields. You would need to repeat your declarations
for the following three groups of selectors individually. Browsers completely
ignore any rule that contains a selector they do not know. */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Interactive elements
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Some form fields, `details`, elements with `tabindex`, and possibly other
elements can be focussed. You should use `:focus-visible` instead of `:focus`
whenever possible. As the former is not yet widely supported, you need to do it
as follows:
1) Set styling on focus
2) If browser supports `:focus-visible`, revert/unset the styling from 1)
3) If the element matches `:focus-visible`, apply the styling again */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Media queries
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
@media (max-width: 512px) {
  fieldset .switcher label + label {
    border-top: 0;
  }
}
@media (min-width: 600px) {
  :root {
    --padding: 1.25rem;
  }
  nav ul {
    --space: 2rem;
  }
  nav li {
    --size: 0.625em;
  }
}
@media (min-width: 900px) {
  :root {
    --padding: 1.5rem;
  }
  nav ul {
    --space: 3rem;
  }
  nav li {
    --size: 0.675em;
  }
}
@media (min-width: 32.5rem) {
  .itinerary__day > ol {
    border-left: 2px dotted var(--green-700);
    padding-left: 1.5rem;
  }
}
/*
This file evolved from Natural Selection:
https://github.com/frontaid/natural-selection
*/
/* The Box
-----------------------------------------------------------------------*/
.box {
  padding: var(--padding);
  border-width: var(--border-thick);
  border: var(--border-thick) solid;
  /* â†“ For high contrast mode */
  outline: var(--border-thick) solid transparent;
  outline-offset: calc(var(--border-thick) * -1);
}

.box * {
  color: inherit;
}

/* The Stack
-----------------------------------------------------------------------*/
.stack,
.stack\:smaller,
.stack\:small {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.stack > *,
.stack\:smaller > *,
.stack\:small > * {
  margin-block: 0;
}

.stack > * + *,
.stack\:smaller > * + *,
.stack\:small > * + * {
  margin-block-start: var(--space, 1.5rem);
}

.stack\:smaller {
  --space: 1rem;
}

.stack\:small {
  --space: 0.5rem;
}

/* The Center
-----------------------------------------------------------------------*/
.center {
  box-sizing: content-box;
  margin-inline: auto;
  max-inline-size: var(--measure);
  padding-inline: 1rem;
}

/* The Cluster
-----------------------------------------------------------------------*/
.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space, 1rem);
  justify-content: flex-start;
  align-items: center;
}

/* The Sidebar
-----------------------------------------------------------------------*/
/* The Switcher
-----------------------------------------------------------------------*/
.switcher {
  --threshold: 30rem;
  display: flex;
  flex-wrap: wrap;
  gap: var(--space, 1.5rem);
}

.switcher > * {
  flex-grow: 1;
  flex-basis: calc((var(--threshold) - 100%) * 999);
}

.switcher > :nth-last-child(n+5),
.switcher > :nth-last-child(n+5) ~ * {
  flex-basis: 100%;
}

/* The Cover
-----------------------------------------------------------------------*/
.cover {
  display: flex;
  flex-direction: column;
  min-block-size: 100vh;
  padding: 0;
}

.cover > * {
  margin-block: 1rem;
}

.cover > :first-child:not(.title) {
  margin-block-start: 0;
}

.cover > :last-child:not(.title) {
  margin-block-end: 0;
}

.cover > .title {
  margin-block: auto;
}

/* The Grid
-----------------------------------------------------------------------*/
.grid {
  display: grid;
  grid-gap: 1rem;
}

@supports (width: min(250px, 100%)) {
  .grid {
    grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
  }
}
/* The Frame
-----------------------------------------------------------------------*/
.frame {
  --n: 16;
  --d: 9;
  aspect-ratio: var(--n)/var(--d);
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

.frame > img,
.frame > video {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
}

/* The Reel
-----------------------------------------------------------------------*/
.reel {
  display: flex;
  block-size: auto;
  overflow-x: auto;
  overflow-y: hidden;
  scrollbar-color: #fff #000;
}

.reel::-webkit-scrollbar {
  display: none;
}

.reel > * {
  --card-width: calc((var(--measure) / 3) - 1rem);
  flex: 0 0 min(90vw, var(--card-width));
  scroll-snap-align: center;
}

.reel > img {
  block-size: 100%;
  flex-basis: auto;
  width: auto;
}

.reel > * + * {
  margin-inline-start: 1rem;
}

.reel.overflowing {
  padding-block-end: 1.5rem;
}

.reel {
  padding-inline: max(1rem, (100vw - var(--measure)) / 2 - 0.5rem);
  padding-inline: 1rem;
  max-inline-size: var(--measure);
  margin-inline: auto;
  scroll-snap-type: x proximity;
  scroll-behavior: smooth;
}

/* The Icon
-----------------------------------------------------------------------*/
.icon {
  width: 0.75em;
  width: 1cap;
  height: 0.75em;
  height: 1cap;
}

.with-icon {
  display: inline-flex;
  align-items: baseline;
}

.with-icon .icon {
  margin-inline-end: 0.5rem;
}

#home {
  background-color: var(--blue-500);
  color: var(--yellow-600);
}

#home > div {
  margin-block-start: 5rem;
}

#home > div > p {
  font-size: clamp(0.75em, 2.5vw, 1em);
  letter-spacing: 0.04em;
  color: var(--yellow-700);
}

#countdown {
  position: relative;
  isolation: isolate;
  z-index: 0;
}

#countdown::before {
  content: "";
  position: absolute;
  inset: 0 0 40% 0;
  background-color: var(--blue-600);
  z-index: -1;
}

#countdown::after {
  box-shadow: 0 2px 4px hsla(207deg, 70%, 10%, 0.2), 0 4px 8px hsla(207deg, 70%, 10%, 0.14), 0 8px 16px hsla(207deg, 70%, 10%, 0.12);
  content: "";
  position: absolute;
  inset: 50% 0 0 0;
  z-index: -2;
}

#itinerary {
  --background-color: var(--green-900);
  color: var(--green-300);
}

#stay {
  background-color: var(--blue-500);
  color: var(--blue-800);
  padding-block: 5rem;
}

#rsvp {
  --background-color: var(--blue-500);
  --color: var(--yellow-600);
  background-color: var(--background-color);
  background-image: linear-gradient(to bottom, hsla(203deg, 20%, 50%, 0.975), hsla(203deg, 20%, 50%, 0.975)), url("./assets/img/lido-outline.png");
  background-size: cover;
  background-position: center bottom;
  background-repeat: no-repeat;
  color: var(--color);
}

.divider {
  margin-block-end: 1em;
  position: relative;
}

.divider::before {
  content: "";
  display: block;
  background-color: var(--yellow-700);
  height: 3px;
  inset-inline: calc(50% - 0.75em);
  inset-block-end: -1em;
  position: absolute;
  width: 1.5em;
}

.surname {
  display: block;
  font-size: 0.2875em;
  font-weight: 400;
  letter-spacing: 0.04em;
}

.ampersand {
  font-family: "Playfair Display";
  font-size: 0.75em;
}

.call-to-action {
  --background-color: var(--yellow-600);
  --color: var(--blue-500);
  background-color: var(--background-color);
  color: var(--color);
  font-size: 1.5em;
  font-weight: 500;
  letter-spacing: 0.04em;
  padding: 0.5em 1em;
  border: 3px solid var(--color);
  outline: 3px solid var(--background-color);
}

.call-to-action:hover {
  --background-color: var(--yellow-500);
}

.clock {
  --space: 3rem;
  color: var(--yellow-600);
  font-size: 3rem;
  font-size: clamp(3rem, 2.2rem + 4vw, 7rem);
  font-weight: 300;
  letter-spacing: -0.02em;
  padding-block: 2.5rem 5rem;
  background-color: var(--blue-600);
  position: relative;
  text-align: center;
}

.clock::before {
  content: "";
  inset: 0 0 0 0;
  z-index: -1;
}

.clock > div > div {
  min-inline-size: 10rem;
}

.clock span {
  color: var(--blue-800);
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.04em;
}

[data-collapsed=true],
[data-collapsed=true] > * {
  height: 0;
  overflow: hidden;
  position: absolute;
}

[data-collapsed=false],
[data-collapsed=false] > * {
  height: revert;
  overflow: revert;
}

.error {
  margin-block-start: 0.5rem;
  display: none;
}

.diagonal {
  position: relative;
  isolation: isolate;
}

.diagonal::after {
  content: "";
  background-color: var(--background-color, inherit);
  background-image: radial-gradient(var(--blue-400) 0.5px, transparent 0.5px), radial-gradient(var(--blue-400) 0.5px, var(--background-color) 0.5px);
  background-position: 0 0, 10px 10px;
  background-size: 20px 20px;
  box-shadow: 0 2px 4px hsla(178deg, 100%, 10%, 0.2), 0 4px 8px hsla(178deg, 100%, 10%, 0.14), 0 8px 16px hsla(178deg, 100%, 10%, 0.12);
  position: absolute;
  inset: 0;
  height: 100%;
  transform: skewY(-5deg);
  z-index: -1;
}

.fade-in {
  opacity: 0;
  transform: scale(0.9);
  transition: all 250ms ease;
}

.fade-in.animate {
  opacity: 1;
  transform: scale(1);
  transition: all 1000ms ease;
}

.fade-in-up {
  opacity: 0;
  translate: 0 2.5%;
  transform: scale(0.95);
  transition: all 1000ms ease;
}

.fade-in-up.animate {
  opacity: 1;
  translate: 0;
  transform: scale(1);
  transition: all 1000ms ease;
}

.highlight {
  background-color: var(--yellow-600);
  border-radius: 2px;
  padding: 0.75em 1.25em 0.625em;
  color: var(--blue-400);
  position: relative;
}

.highlight::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: var(--yellow-600);
  transform: scale(1);
  border-radius: 2px;
  z-index: 0;
  transition: all 125ms ease;
  box-shadow: 0 2px 4px hsla(32deg, 100%, 20%, 0.2), 0 4px 8px hsla(32deg, 100%, 20%, 0.14), 0 8px 16px hsla(32deg, 100%, 20%, 0.12);
}

.highlight:hover::before {
  background-color: var(--yellow-500);
  transition: all 250ms ease;
  transform: scale(1.1);
  box-shadow: 0 4px 8px hsla(32deg, 100%, 20%, 0.2), 0 8px 16px hsla(32deg, 100%, 20%, 0.14), 0 16px 32px hsla(32deg, 100%, 20%, 0.12);
}

.dot-navigation {
  align-items: center;
  display: flex;
  justify-content: center;
  padding: 0;
}

.dot-navigation__item {
  border-radius: 50%;
  border: 1px solid currentColor;
  height: 0.75rem;
  width: 0.75rem;
  background-color: transparent;
  margin: 0 0.25rem;
}

.dot-navigation__item--active {
  background-color: #d1d5db;
}

@media (max-width: 599px) {
  .dot-navigation {
    display: none;
  }
}
.itinerary__day {
  align-items: baseline;
}
.itinerary__day h3 {
  font-size: 2.5rem;
  font-size: clamp(2.5rem, 2.2rem + 1.5vw, 4rem);
  letter-spacing: -0.02em;
}
.itinerary__day h3:not(:first-child) {
  margin-block-start: 3rem;
}
.itinerary__day > div {
  margin-block-end: 1.5rem;
}
.itinerary__day > div time {
  color: var(--green-600);
  font-size: 1.125rem;
  text-align: right;
}
.itinerary__day li {
  display: grid;
  grid-template-columns: 75px 1fr;
  column-gap: 0.25rem;
}
.itinerary__day li time {
  color: var(--green-500);
}

.submitting {
  opacity: 0.75;
  pointer-events: none;
}

.align-items\:baseline {
  align-items: baseline !important;
}

.justify-content\:space-between {
  justify-content: space-between !important;
}

.justify-content\:flex-start {
  justify-content: flex-start !important;
}

.justify-content\:center {
  justify-content: center !important;
}

.font-size\:smaller {
  font-size: 0.875em !important;
}

.font-size\:smallest {
  font-size: 0.75em !important;
}

.text-align\:center {
  text-align: center !important;
}

.text-transform\:uppercase {
  text-transform: uppercase !important;
}

/*# sourceMappingURL=index.css.map */
